// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // ⚠️ Firebase 설정 (중요!)
  // 아래의 API 키들을 본인의 Firebase 프로젝트 키로 변경해야 합니다.
  //
  // 설정 방법:
  // 1. Firebase Console (https://console.firebase.google.com/)에서 새 프로젝트 생성
  // 2. Android 앱 추가
  // 3. google-services.json 파일 다운로드
  // 4. android/app/ 폴더에 google-services.json 파일 배치
  // 5. 아래의 키들을 본인의 프로젝트 키로 교체
  //
  // 또는 FlutterFire CLI 사용:
  // dart pub global activate flutterfire_cli
  // flutterfire configure
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'YOUR_FIREBASE_API_KEY_HERE', // ⚠️ 본인의 Firebase API 키로 변경하세요!
    appId: 'YOUR_FIREBASE_APP_ID_HERE', // ⚠️ 본인의 Firebase App ID로 변경하세요!
    messagingSenderId:
        'YOUR_MESSAGING_SENDER_ID_HERE', // ⚠️ 본인의 Messaging Sender ID로 변경하세요!
    projectId:
        'YOUR_FIREBASE_PROJECT_ID_HERE', // ⚠️ 본인의 Firebase Project ID로 변경하세요!
    databaseURL:
        'YOUR_FIREBASE_DATABASE_URL_HERE', // ⚠️ 본인의 Firebase Database URL로 변경하세요!
    storageBucket:
        'YOUR_FIREBASE_STORAGE_BUCKET_HERE', // ⚠️ 본인의 Firebase Storage Bucket으로 변경하세요!
  );
}
